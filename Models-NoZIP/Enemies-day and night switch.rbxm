<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Part" referent="RBX0">
		<Properties>
			<bool name="Anchored">true</bool>
			<float name="BackParamA">-0.5</float>
			<float name="BackParamB">0.5</float>
			<token name="BackSurface">0</token>
			<token name="BackSurfaceInput">0</token>
			<float name="BottomParamA">-0.5</float>
			<float name="BottomParamB">0.5</float>
			<token name="BottomSurface">4</token>
			<token name="BottomSurfaceInput">0</token>
			<int name="BrickColor">194</int>
			<CoordinateFrame name="CFrame">
				<X>-58</X>
				<Y>63.4000015</Y>
				<Z>-234</Z>
				<R00>-0</R00>
				<R01>0</R01>
				<R02>1</R02>
				<R10>-0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>-1</R20>
				<R21>0</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="CanCollide">true</bool>
			<bool name="DraggingV1">false</bool>
			<float name="Elasticity">0.5</float>
			<token name="FormFactor">1</token>
			<float name="Friction">0.300000012</float>
			<float name="FrontParamA">-0.5</float>
			<float name="FrontParamB">0.5</float>
			<token name="FrontSurface">0</token>
			<token name="FrontSurfaceInput">0</token>
			<float name="LeftParamA">-0.5</float>
			<float name="LeftParamB">0.5</float>
			<token name="LeftSurface">0</token>
			<token name="LeftSurfaceInput">0</token>
			<bool name="Locked">false</bool>
			<token name="Material">256</token>
			<string name="Name">DayNight Switcher</string>
			<float name="Reflectance">0</float>
			<float name="RightParamA">-0.5</float>
			<float name="RightParamB">0.5</float>
			<token name="RightSurface">0</token>
			<token name="RightSurfaceInput">0</token>
			<Vector3 name="RotVelocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="TopParamA">-0.5</float>
			<float name="TopParamB">0.5</float>
			<token name="TopSurface">0</token>
			<token name="TopSurfaceInput">0</token>
			<float name="Transparency">0</float>
			<Vector3 name="Velocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<bool name="archivable">true</bool>
			<token name="shape">1</token>
			<Vector3 name="size">
				<X>2</X>
				<Y>2</Y>
				<Z>2</Z>
			</Vector3>
		</Properties>
		<Item class="ClickDetector" referent="RBX1">
			<Properties>
				<float name="MaxActivationDistance">64</float>
				<string name="Name">ClickDetector</string>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX2">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LightingSwitcher</string>
				<ProtectedString name="Source">--		-{BOOMARANG}-
daymins = 840 --420 to 1020
nightmins = 0 --1080 to 1439, or 0 to 360.
brick = script.Parent
mesh = brick.Mesh
lighting = game.Lighting
MeshTable = {&quot;http://www.roblox.com/asset/?id=24824896&quot;, &quot;http://www.roblox.com/asset/?id=24824915&quot;} --Day, night.

function CheckLighting(l)
	if l:GetMinutesAfterMidnight() &gt;= 420 and l:GetMinutesAfterMidnight() &lt;= 1020 then
		print(&quot;It is &quot;..l:GetMinutesAfterMidnight()..&quot; minutes after midnight, making it day time.&quot;)

		return &quot;Day&quot;
	elseif l:GetMinutesAfterMidnight() &gt;= 1080 or l:GetMinutesAfterMidnight() &lt;= 360 then
		print(&quot;It is &quot;..l:GetMinutesAfterMidnight()..&quot; minutes after midnight, making it night time.&quot;)

		return &quot;Night&quot;
	end
end

if CheckLighting(lighting) == &quot;Day&quot; then
	mesh.TextureId = MeshTable[1]
elseif CheckLighting(lighting) == &quot;Night&quot; then
	mesh.TextureId = MeshTable[2]
end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
function SwitchLighting()
	if CheckLighting(lighting) == &quot;Day&quot; and mesh.TextureId == MeshTable[1] then
		lighting:SetMinutesAfterMidnight(nightmins)
		mesh.TextureId = MeshTable[2]

		print(&quot;Lighting changed to Night. It is now &quot;..lighting:GetMinutesAfterMidnight()..&quot; minutes after midnight!&quot;)
	elseif CheckLighting(lighting) == &quot;Night&quot; and mesh.TextureId == MeshTable[2] then
		lighting:SetMinutesAfterMidnight(daymins)
		mesh.TextureId = MeshTable[1]

		print(&quot;Lighting changed to Day. It is now &quot;..lighting:GetMinutesAfterMidnight()..&quot; minutes after midnight!&quot;)
	end
end

brick.ClickDetector.MouseClick:connect(SwitchLighting)
--I love the Eggs of Equinox.</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>